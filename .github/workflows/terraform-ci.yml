name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint-and-validate:
    name: Lint and Validate Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.2  # Adjust to your Terraform version

      - name: Configure Terraform Credentials
        run: |
            mkdir -p $HOME/.terraform.d
            echo "credentials \"app.terraform.io\" {token = \"$TFE_TOKEN\"}" > $HOME/.terraform.d/credentials.tfrc.json
        env:
            TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
      
      - name: Terraform Init  # Added step
        run: terraform init  # This will download the providers

      - name: Terraform Validate
        run: terraform validate

      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: Terraform Lint
        run: |
          tflint

  check-pr-title:
    name: Check PR Title
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Check PR Title
        id: check_pr_title
        uses: actions/github-script@v3
        with:
          script: |
            const { data: pr } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const prTitle = pr.title;
            const validPrefixes are ["feat:", "bug:", "release:", "fix"];
            const isValid = validPrefixes.some(prefix => prTitle.startsWith(prefix));

            if (!isValid) {
              core.setFailed(`PR title must start with one of the following: ${validPrefixes.join(", ")}`);
            }

  terraform-cloud-plan:
    name: Terraform Plan on Terraform Cloud
    runs-on: ubuntu-latest
    needs: [lint-and-validate, check-pr-title]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.2

      - name: Terraform Cloud Plan
        uses: hashicorp/terraform-cloud-action@v1
        with:
          api-token: ${{ secrets.TFE_TOKEN }}
          organization: ${{ secrets.TERRAFORM_CLOUD_ORG }}
          workspace: ${{ secrets.TERRAFORM_WORKSPACE_ID }}
          plan: true

  trigger-terraform-cloud:
    name: Trigger Terraform Cloud Apply
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.2

      - name: Terraform Cloud Apply
        uses: hashicorp/terraform-cloud-action@v1
        with:
          api-token: ${{ secrets.TFE_TOKEN }}
          organization: ${{ secrets.TERRAFORM_CLOUD_ORG }}
          workspace: ${{ secrets.TERRAFORM_WORKSPACE_ID }}
          apply: true
