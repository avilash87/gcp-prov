name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint-and-validate:
    name: Lint and Validate Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.2  # Adjust to your Terraform version

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Lint
        run: |
          curl -sSLo .tflint.hcl https://raw.githubusercontent.com/terraform-linters/tflint/master/.tflint.hcl
          curl -sSLo tflint https://raw.githubusercontent.com/terraform-linters/tflint/master/tflint
          chmod +x tflint
          ./tflint

  check-pr-title:
    name: Check PR Title
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Title
        id: check_pr_title
        uses: actions/github-script@v3
        with:
          script: |
            const prTitle = github.context.payload.pull_request.title;
            const validPrefixes = ["feat/", "bug/", "release/"];
            const isValid = validPrefixes.some(prefix => prTitle.startsWith(prefix));

            if (!isValid) {
              core.setFailed(`PR title must start with one of the following: ${validPrefixes.join(", ")}`);
            }

  terraform-cloud-plan:
    name: Terraform Plan on Terraform Cloud
    runs-on: ubuntu-latest
    needs: [lint-and-validate, check-pr-title]
    steps:
      - name: Trigger Terraform Plan in Terraform Cloud
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $TFE_TOKEN" \
            -H "Content-Type: application/vnd.api+json" \
            -d '{
                  "data": {
                    "attributes": {
                      "is-destroy": false,
                      "message": "Triggered by GitHub Actions for PR",
                      "plan-only": true
                    },
                    "type": "runs",
                    "relationships": {
                      "workspace": {
                        "data": {
                          "type": "workspaces",
                          "id": "ws-8MKBSwapkvVJVdUg"
                        }
                      }
                    }
                  }
                }' \
            https://app.terraform.io/api/v2/runs

  auto-merge:
    name: Auto-Merge PR
    runs-on: ubuntu-latest
    needs: [terraform-cloud-plan]
    if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }}
    steps:
      - name: Merge PR
        uses: actions/github-script@v3
        with:
          script: |
            github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              merge_method: "squash"
            });

  trigger-terraform-cloud:
    name: Trigger Terraform Cloud Apply
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Terraform Apply in Terraform Cloud
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $TFE_TOKEN" \
            -H "Content-Type: application/vnd.api+json" \
            -d '{"data":{"type":"runs","attributes":{"message":"Triggered by GitHub Actions - Merge to Main"},"relationships":{"workspace":{"data":{"type":"workspaces","id":"ws-8MKBSwapkvVJVdUg"}}}}}' \
            https://app.terraform.io/api/v2/runs
